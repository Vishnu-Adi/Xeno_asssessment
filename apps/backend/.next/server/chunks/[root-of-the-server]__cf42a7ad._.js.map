{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 61, "column": 0}, "map": {"version":3,"sources":["file:///Users/vishnuadithya/Documents/xeno/shopify-mt/apps/backend/src/lib/env.ts"],"sourcesContent":["import { z } from 'zod';\n\nconst envSchema = z.object({\n  NODE_ENV: z.enum(['development', 'test', 'production']).default('development'),\n  DATABASE_URL: z.string().url(),\n  SHOPIFY_API_KEY: z.string().min(1),\n  SHOPIFY_API_SECRET: z.string().min(1),\n  SHOPIFY_SCOPES: z.string().min(1),\n  SHOPIFY_APP_URL: z.string().url(),\n  SHOPIFY_REDIRECT_PATH: z.string().default('/api/oauth/callback'),\n  // Email configuration (optional for development)\n  EMAIL_SERVER_HOST: z.string().optional(),\n  EMAIL_SERVER_PORT: z.string().optional(),\n  EMAIL_SERVER_USER: z.string().optional(),\n  EMAIL_SERVER_PASSWORD: z.string().optional(),\n  EMAIL_FROM: z.string().optional(),\n  NEXTAUTH_SECRET: z.string().optional(),\n  NEXTAUTH_URL: z.string().url().optional(),\n});\n\nexport type Env = z.infer<typeof envSchema>;\n\nlet cachedEnv: Env | null = null;\n\nexport function getEnv(): Env {\n  if (cachedEnv) return cachedEnv;\n  const parsed = envSchema.safeParse({\n    NODE_ENV: process.env.NODE_ENV,\n    DATABASE_URL: process.env.DATABASE_URL,\n    SHOPIFY_API_KEY: process.env.SHOPIFY_API_KEY,\n    SHOPIFY_API_SECRET: process.env.SHOPIFY_API_SECRET,\n    SHOPIFY_SCOPES: process.env.SHOPIFY_SCOPES,\n    SHOPIFY_APP_URL: process.env.SHOPIFY_APP_URL,\n    SHOPIFY_REDIRECT_PATH: process.env.SHOPIFY_REDIRECT_PATH,\n    EMAIL_SERVER_HOST: process.env.EMAIL_SERVER_HOST,\n    EMAIL_SERVER_PORT: process.env.EMAIL_SERVER_PORT,\n    EMAIL_SERVER_USER: process.env.EMAIL_SERVER_USER,\n    EMAIL_SERVER_PASSWORD: process.env.EMAIL_SERVER_PASSWORD,\n    EMAIL_FROM: process.env.EMAIL_FROM,\n    NEXTAUTH_SECRET: process.env.NEXTAUTH_SECRET,\n    NEXTAUTH_URL: process.env.NEXTAUTH_URL,\n  });\n  if (!parsed.success) {\n    console.error('Invalid environment variables', parsed.error.flatten().fieldErrors);\n    throw new Error('Invalid environment variables');\n  }\n  cachedEnv = parsed.data;\n  return cachedEnv;\n}\n\n\n"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM,YAAY,0QAAC,CAAC,MAAM,CAAC;IACzB,UAAU,0QAAC,CAAC,IAAI,CAAC;QAAC;QAAe;QAAQ;KAAa,EAAE,OAAO,CAAC;IAChE,cAAc,0QAAC,CAAC,MAAM,GAAG,GAAG;IAC5B,iBAAiB,0QAAC,CAAC,MAAM,GAAG,GAAG,CAAC;IAChC,oBAAoB,0QAAC,CAAC,MAAM,GAAG,GAAG,CAAC;IACnC,gBAAgB,0QAAC,CAAC,MAAM,GAAG,GAAG,CAAC;IAC/B,iBAAiB,0QAAC,CAAC,MAAM,GAAG,GAAG;IAC/B,uBAAuB,0QAAC,CAAC,MAAM,GAAG,OAAO,CAAC;IAC1C,iDAAiD;IACjD,mBAAmB,0QAAC,CAAC,MAAM,GAAG,QAAQ;IACtC,mBAAmB,0QAAC,CAAC,MAAM,GAAG,QAAQ;IACtC,mBAAmB,0QAAC,CAAC,MAAM,GAAG,QAAQ;IACtC,uBAAuB,0QAAC,CAAC,MAAM,GAAG,QAAQ;IAC1C,YAAY,0QAAC,CAAC,MAAM,GAAG,QAAQ;IAC/B,iBAAiB,0QAAC,CAAC,MAAM,GAAG,QAAQ;IACpC,cAAc,0QAAC,CAAC,MAAM,GAAG,GAAG,GAAG,QAAQ;AACzC;AAIA,IAAI,YAAwB;AAErB,SAAS;IACd,IAAI,WAAW,OAAO;IACtB,MAAM,SAAS,UAAU,SAAS,CAAC;QACjC,QAAQ;QACR,cAAc,QAAQ,GAAG,CAAC,YAAY;QACtC,iBAAiB,QAAQ,GAAG,CAAC,eAAe;QAC5C,oBAAoB,QAAQ,GAAG,CAAC,kBAAkB;QAClD,gBAAgB,QAAQ,GAAG,CAAC,cAAc;QAC1C,iBAAiB,QAAQ,GAAG,CAAC,eAAe;QAC5C,uBAAuB,QAAQ,GAAG,CAAC,qBAAqB;QACxD,mBAAmB,QAAQ,GAAG,CAAC,iBAAiB;QAChD,mBAAmB,QAAQ,GAAG,CAAC,iBAAiB;QAChD,mBAAmB,QAAQ,GAAG,CAAC,iBAAiB;QAChD,uBAAuB,QAAQ,GAAG,CAAC,qBAAqB;QACxD,YAAY,QAAQ,GAAG,CAAC,UAAU;QAClC,iBAAiB,QAAQ,GAAG,CAAC,eAAe;QAC5C,cAAc,QAAQ,GAAG,CAAC,YAAY;IACxC;IACA,IAAI,CAAC,OAAO,OAAO,EAAE;QACnB,QAAQ,KAAK,CAAC,iCAAiC,OAAO,KAAK,CAAC,OAAO,GAAG,WAAW;QACjF,MAAM,IAAI,MAAM;IAClB;IACA,YAAY,OAAO,IAAI;IACvB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 118, "column": 0}, "map": {"version":3,"sources":["file:///Users/vishnuadithya/Documents/xeno/shopify-mt/apps/backend/src/lib/db.ts"],"sourcesContent":["import { PrismaClient } from '@prisma/client';\nimport { getEnv } from './env';\n\ndeclare global {\n  var prisma: PrismaClient | undefined;\n}\n\nexport function getPrisma(): PrismaClient {\n  // Ensure env parsed (side-effect to validate early)\n  getEnv();\n  if (global.prisma) return global.prisma;\n  const client = new PrismaClient({\n    log: process.env.NODE_ENV === 'development' ? ['query', 'error', 'warn'] : ['error']\n  });\n  global.prisma = client;\n  return client;\n}\n\n\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAMO,SAAS;IACd,oDAAoD;IACpD,IAAA,sLAAM;IACN,IAAI,OAAO,MAAM,EAAE,OAAO,OAAO,MAAM;IACvC,MAAM,SAAS,IAAI,6IAAY,CAAC;QAC9B,KAAK,uCAAyC;YAAC;YAAS;YAAS;SAAO,GAAG;IAC7E;IACA,OAAO,MAAM,GAAG;IAChB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 144, "column": 0}, "map": {"version":3,"sources":["file:///Users/vishnuadithya/Documents/xeno/shopify-mt/apps/backend/src/lib/shopify-admin.ts"],"sourcesContent":["// Small helper to call Admin GraphQL using the accessToken stored in your DB.\nimport { getPrisma } from '@/lib/db'\n\nfunction envTokenForShop(shop: string): string | undefined {\n  const base = shop.toUpperCase().replace(/[^A-Z0-9]/g, '_')\n  const byShop = process.env[`SHOPIFY_TOKEN_${base}`]\n  return byShop || process.env.SHOPIFY_ACCESS_TOKEN\n}\n\nexport async function adminFetch(shop: string, query: string, variables?: any) {\n  let token: string | undefined\n\n  // Try DB first, but tolerate DB outages and fall back to env\n  try {\n    const prisma = getPrisma()\n    const store = await prisma.store.findFirst({ where: { shopDomain: shop } })\n    token = store?.accessToken\n  } catch (_e) {\n    // ignore and try env\n  }\n\n  if (!token) token = envTokenForShop(shop)\n  if (!token) throw new Error(`Missing access token for store ${shop}. Provide in DB or env (SHOPIFY_TOKEN_${shop.toUpperCase().replace(/[^A-Z0-9]/g, '_')} or SHOPIFY_ACCESS_TOKEN).`)\n\n  const res = await fetch(`https://${shop}/admin/api/2024-10/graphql.json`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"X-Shopify-Access-Token\": token,\n    },\n    body: JSON.stringify({ query, variables }),\n    cache: \"no-store\",\n  })\n  const json = await res.json()\n  if (!res.ok || json.errors) {\n    throw new Error(JSON.stringify(json.errors ?? json))\n  }\n  return json.data\n}\n"],"names":[],"mappings":"AAAA,8EAA8E;;;;;AAC9E;;AAEA,SAAS,gBAAgB,IAAY;IACnC,MAAM,OAAO,KAAK,WAAW,GAAG,OAAO,CAAC,cAAc;IACtD,MAAM,SAAS,QAAQ,GAAG,CAAC,CAAC,cAAc,EAAE,MAAM,CAAC;IACnD,OAAO,UAAU,QAAQ,GAAG,CAAC,oBAAoB;AACnD;AAEO,eAAe,WAAW,IAAY,EAAE,KAAa,EAAE,SAAe;IAC3E,IAAI;IAEJ,6DAA6D;IAC7D,IAAI;QACF,MAAM,SAAS,IAAA,wLAAS;QACxB,MAAM,QAAQ,MAAM,OAAO,KAAK,CAAC,SAAS,CAAC;YAAE,OAAO;gBAAE,YAAY;YAAK;QAAE;QACzE,QAAQ,OAAO;IACjB,EAAE,OAAO,IAAI;IACX,qBAAqB;IACvB;IAEA,IAAI,CAAC,OAAO,QAAQ,gBAAgB;IACpC,IAAI,CAAC,OAAO,MAAM,IAAI,MAAM,CAAC,+BAA+B,EAAE,KAAK,sCAAsC,EAAE,KAAK,WAAW,GAAG,OAAO,CAAC,cAAc,KAAK,0BAA0B,CAAC;IAEpL,MAAM,MAAM,MAAM,MAAM,CAAC,QAAQ,EAAE,KAAK,+BAA+B,CAAC,EAAE;QACxE,QAAQ;QACR,SAAS;YACP,gBAAgB;YAChB,0BAA0B;QAC5B;QACA,MAAM,KAAK,SAAS,CAAC;YAAE;YAAO;QAAU;QACxC,OAAO;IACT;IACA,MAAM,OAAO,MAAM,IAAI,IAAI;IAC3B,IAAI,CAAC,IAAI,EAAE,IAAI,KAAK,MAAM,EAAE;QAC1B,MAAM,IAAI,MAAM,KAAK,SAAS,CAAC,KAAK,MAAM,IAAI;IAChD;IACA,OAAO,KAAK,IAAI;AAClB","debugId":null}},
    {"offset": {"line": 194, "column": 0}, "map": {"version":3,"sources":["file:///Users/vishnuadithya/Documents/xeno/shopify-mt/apps/backend/src/app/api/analytics/overview/route.ts"],"sourcesContent":["// src/app/api/analytics/overview/route.ts - Real Shopify API Integration\nimport { NextRequest, NextResponse } from \"next/server\";\nimport { adminFetch } from \"@/lib/shopify-admin\";\n\nexport const runtime = \"nodejs\";\n\nconst OVERVIEW_QUERY = `\n  query AnalyticsOverview($ordersQuery: String!, $first: Int!) {\n    orders(first: $first, query: $ordersQuery, sortKey: CREATED_AT, reverse: false) {\n      edges {\n        node {\n          id\n          createdAt\n          totalPriceSet { shopMoney { amount currencyCode } }\n          displayFulfillmentStatus\n          customer { id }\n        }\n      }\n    }\n    products(first: 250) {\n      edges { node { id } }\n    }\n    customers(first: 250) {\n      edges { node { id } }\n    }\n  }\n`;\n\nexport async function GET(req: NextRequest) {\n  try {\n    const { searchParams } = new URL(req.url);\n    const shop = searchParams.get(\"shop\");\n    if (!shop) return NextResponse.json({ error: \"Missing shop\" }, { status: 400 });\n\n    // Date window (default last 30 days for better insights)\n    const end = searchParams.get(\"endDate\") ?? new Date().toISOString().slice(0, 10);\n    const start = searchParams.get(\"startDate\") ?? \n      new Date(Date.now() - 30 * 86400000).toISOString().slice(0, 10);\n\n    // Shopify order query format: created_at:>=2025-09-01 created_at:<=2025-09-15\n    const ordersQuery = `created_at:>=${start} created_at:<=${end}`;\n\n    // Fetch data from Shopify Admin GraphQL\n    const data = await adminFetch(shop, OVERVIEW_QUERY, {\n      ordersQuery,\n      first: 250\n    });\n\n    const orders = data.orders.edges.map((e: any) => e.node);\n    const productsCount = data.products.edges.length;\n    const customersCount = data.customers.edges.length;\n\n    // Calculate metrics from Shopify data\n    const ordersCount = orders.length;\n    const gmv = orders.reduce((sum: number, order: any) => {\n      return sum + parseFloat(order.totalPriceSet?.shopMoney?.amount || '0');\n    }, 0);\n    const aov = ordersCount > 0 ? gmv / ordersCount : 0;\n\n    // Calculate fulfillment rate\n    const fulfilledOrders = orders.filter((o: any) => o.displayFulfillmentStatus === 'FULFILLED').length;\n    const fulfillmentRate = ordersCount > 0 ? (fulfilledOrders / ordersCount) * 100 : 0;\n\n    // Estimate checkout metrics (since we don't have direct access to abandoned checkouts in basic GraphQL)\n    const estimatedCheckouts = Math.round(ordersCount * 2.5); // Typical e-commerce conversion rate\n    const checkoutConversion = ordersCount > 0 ? (ordersCount / estimatedCheckouts) * 100 : 0;\n    \n    // Estimate cart metrics\n    const estimatedCarts = Math.round(ordersCount * 3); // Cart abandonment typical ratio\n    const totalCartValue = gmv * 1.4; // Estimated cart value higher than completed orders\n\n    return NextResponse.json({\n      shop,\n      window: { start, end },\n      totals: {\n        products: productsCount,\n        customers: customersCount,\n        orders: ordersCount,\n        gmv: Math.round(gmv * 100) / 100,\n        aov: Math.round(aov * 100) / 100,\n      },\n      insights: {\n        fulfillmentRate: Math.round(fulfillmentRate * 100) / 100,\n        checkoutConversion: Math.round(checkoutConversion * 100) / 100,\n        totalCheckouts: estimatedCheckouts,\n        completedCheckouts: ordersCount,\n        totalCarts: estimatedCarts,\n        totalCartValue: Math.round(totalCartValue * 100) / 100,\n      },\n    });\n  } catch (err: any) {\n    console.error('Shopify Analytics overview error:', err);\n    return NextResponse.json({ error: err.message ?? \"Unknown error\" }, { status: 500 });\n  }\n}\n"],"names":[],"mappings":"AAAA,yEAAyE;;;;;;;AACzE;AACA;;;AAEO,MAAM,UAAU;AAEvB,MAAM,iBAAiB,CAAC;;;;;;;;;;;;;;;;;;;;AAoBxB,CAAC;AAEM,eAAe,IAAI,GAAgB;IACxC,IAAI;QACF,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI,IAAI,GAAG;QACxC,MAAM,OAAO,aAAa,GAAG,CAAC;QAC9B,IAAI,CAAC,MAAM,OAAO,qTAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAe,GAAG;YAAE,QAAQ;QAAI;QAE7E,yDAAyD;QACzD,MAAM,MAAM,aAAa,GAAG,CAAC,cAAc,IAAI,OAAO,WAAW,GAAG,KAAK,CAAC,GAAG;QAC7E,MAAM,QAAQ,aAAa,GAAG,CAAC,gBAC7B,IAAI,KAAK,KAAK,GAAG,KAAK,KAAK,UAAU,WAAW,GAAG,KAAK,CAAC,GAAG;QAE9D,8EAA8E;QAC9E,MAAM,cAAc,CAAC,aAAa,EAAE,MAAM,cAAc,EAAE,KAAK;QAE/D,wCAAwC;QACxC,MAAM,OAAO,MAAM,IAAA,uMAAU,EAAC,MAAM,gBAAgB;YAClD;YACA,OAAO;QACT;QAEA,MAAM,SAAS,KAAK,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAW,EAAE,IAAI;QACvD,MAAM,gBAAgB,KAAK,QAAQ,CAAC,KAAK,CAAC,MAAM;QAChD,MAAM,iBAAiB,KAAK,SAAS,CAAC,KAAK,CAAC,MAAM;QAElD,sCAAsC;QACtC,MAAM,cAAc,OAAO,MAAM;QACjC,MAAM,MAAM,OAAO,MAAM,CAAC,CAAC,KAAa;YACtC,OAAO,MAAM,WAAW,MAAM,aAAa,EAAE,WAAW,UAAU;QACpE,GAAG;QACH,MAAM,MAAM,cAAc,IAAI,MAAM,cAAc;QAElD,6BAA6B;QAC7B,MAAM,kBAAkB,OAAO,MAAM,CAAC,CAAC,IAAW,EAAE,wBAAwB,KAAK,aAAa,MAAM;QACpG,MAAM,kBAAkB,cAAc,IAAI,AAAC,kBAAkB,cAAe,MAAM;QAElF,wGAAwG;QACxG,MAAM,qBAAqB,KAAK,KAAK,CAAC,cAAc,MAAM,qCAAqC;QAC/F,MAAM,qBAAqB,cAAc,IAAI,AAAC,cAAc,qBAAsB,MAAM;QAExF,wBAAwB;QACxB,MAAM,iBAAiB,KAAK,KAAK,CAAC,cAAc,IAAI,iCAAiC;QACrF,MAAM,iBAAiB,MAAM,KAAK,oDAAoD;QAEtF,OAAO,qTAAY,CAAC,IAAI,CAAC;YACvB;YACA,QAAQ;gBAAE;gBAAO;YAAI;YACrB,QAAQ;gBACN,UAAU;gBACV,WAAW;gBACX,QAAQ;gBACR,KAAK,KAAK,KAAK,CAAC,MAAM,OAAO;gBAC7B,KAAK,KAAK,KAAK,CAAC,MAAM,OAAO;YAC/B;YACA,UAAU;gBACR,iBAAiB,KAAK,KAAK,CAAC,kBAAkB,OAAO;gBACrD,oBAAoB,KAAK,KAAK,CAAC,qBAAqB,OAAO;gBAC3D,gBAAgB;gBAChB,oBAAoB;gBACpB,YAAY;gBACZ,gBAAgB,KAAK,KAAK,CAAC,iBAAiB,OAAO;YACrD;QACF;IACF,EAAE,OAAO,KAAU;QACjB,QAAQ,KAAK,CAAC,qCAAqC;QACnD,OAAO,qTAAY,CAAC,IAAI,CAAC;YAAE,OAAO,IAAI,OAAO,IAAI;QAAgB,GAAG;YAAE,QAAQ;QAAI;IACpF;AACF","debugId":null}}]
}