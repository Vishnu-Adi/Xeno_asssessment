{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 61, "column": 0}, "map": {"version":3,"sources":["file:///Users/vishnuadithya/Documents/xeno/shopify-mt/apps/backend/src/lib/env.ts"],"sourcesContent":["import { z } from 'zod';\n\nconst envSchema = z.object({\n  NODE_ENV: z.enum(['development', 'test', 'production']).default('development'),\n  DATABASE_URL: z.string().url(),\n  SHOPIFY_API_KEY: z.string().min(1),\n  SHOPIFY_API_SECRET: z.string().min(1),\n  SHOPIFY_SCOPES: z.string().min(1),\n  SHOPIFY_APP_URL: z.string().url(),\n  SHOPIFY_REDIRECT_PATH: z.string().default('/api/oauth/callback'),\n  // Email configuration (optional for development)\n  EMAIL_SERVER_HOST: z.string().optional(),\n  EMAIL_SERVER_PORT: z.string().optional(),\n  EMAIL_SERVER_USER: z.string().optional(),\n  EMAIL_SERVER_PASSWORD: z.string().optional(),\n  EMAIL_FROM: z.string().optional(),\n  NEXTAUTH_SECRET: z.string().optional(),\n  NEXTAUTH_URL: z.string().url().optional(),\n});\n\nexport type Env = z.infer<typeof envSchema>;\n\nlet cachedEnv: Env | null = null;\n\nexport function getEnv(): Env {\n  if (cachedEnv) return cachedEnv;\n  const parsed = envSchema.safeParse({\n    NODE_ENV: process.env.NODE_ENV,\n    DATABASE_URL: process.env.DATABASE_URL,\n    SHOPIFY_API_KEY: process.env.SHOPIFY_API_KEY,\n    SHOPIFY_API_SECRET: process.env.SHOPIFY_API_SECRET,\n    SHOPIFY_SCOPES: process.env.SHOPIFY_SCOPES,\n    SHOPIFY_APP_URL: process.env.SHOPIFY_APP_URL,\n    SHOPIFY_REDIRECT_PATH: process.env.SHOPIFY_REDIRECT_PATH,\n    EMAIL_SERVER_HOST: process.env.EMAIL_SERVER_HOST,\n    EMAIL_SERVER_PORT: process.env.EMAIL_SERVER_PORT,\n    EMAIL_SERVER_USER: process.env.EMAIL_SERVER_USER,\n    EMAIL_SERVER_PASSWORD: process.env.EMAIL_SERVER_PASSWORD,\n    EMAIL_FROM: process.env.EMAIL_FROM,\n    NEXTAUTH_SECRET: process.env.NEXTAUTH_SECRET,\n    NEXTAUTH_URL: process.env.NEXTAUTH_URL,\n  });\n  if (!parsed.success) {\n    console.error('Invalid environment variables', parsed.error.flatten().fieldErrors);\n    throw new Error('Invalid environment variables');\n  }\n  cachedEnv = parsed.data;\n  return cachedEnv;\n}\n\n\n"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM,YAAY,0QAAC,CAAC,MAAM,CAAC;IACzB,UAAU,0QAAC,CAAC,IAAI,CAAC;QAAC;QAAe;QAAQ;KAAa,EAAE,OAAO,CAAC;IAChE,cAAc,0QAAC,CAAC,MAAM,GAAG,GAAG;IAC5B,iBAAiB,0QAAC,CAAC,MAAM,GAAG,GAAG,CAAC;IAChC,oBAAoB,0QAAC,CAAC,MAAM,GAAG,GAAG,CAAC;IACnC,gBAAgB,0QAAC,CAAC,MAAM,GAAG,GAAG,CAAC;IAC/B,iBAAiB,0QAAC,CAAC,MAAM,GAAG,GAAG;IAC/B,uBAAuB,0QAAC,CAAC,MAAM,GAAG,OAAO,CAAC;IAC1C,iDAAiD;IACjD,mBAAmB,0QAAC,CAAC,MAAM,GAAG,QAAQ;IACtC,mBAAmB,0QAAC,CAAC,MAAM,GAAG,QAAQ;IACtC,mBAAmB,0QAAC,CAAC,MAAM,GAAG,QAAQ;IACtC,uBAAuB,0QAAC,CAAC,MAAM,GAAG,QAAQ;IAC1C,YAAY,0QAAC,CAAC,MAAM,GAAG,QAAQ;IAC/B,iBAAiB,0QAAC,CAAC,MAAM,GAAG,QAAQ;IACpC,cAAc,0QAAC,CAAC,MAAM,GAAG,GAAG,GAAG,QAAQ;AACzC;AAIA,IAAI,YAAwB;AAErB,SAAS;IACd,IAAI,WAAW,OAAO;IACtB,MAAM,SAAS,UAAU,SAAS,CAAC;QACjC,QAAQ;QACR,cAAc,QAAQ,GAAG,CAAC,YAAY;QACtC,iBAAiB,QAAQ,GAAG,CAAC,eAAe;QAC5C,oBAAoB,QAAQ,GAAG,CAAC,kBAAkB;QAClD,gBAAgB,QAAQ,GAAG,CAAC,cAAc;QAC1C,iBAAiB,QAAQ,GAAG,CAAC,eAAe;QAC5C,uBAAuB,QAAQ,GAAG,CAAC,qBAAqB;QACxD,mBAAmB,QAAQ,GAAG,CAAC,iBAAiB;QAChD,mBAAmB,QAAQ,GAAG,CAAC,iBAAiB;QAChD,mBAAmB,QAAQ,GAAG,CAAC,iBAAiB;QAChD,uBAAuB,QAAQ,GAAG,CAAC,qBAAqB;QACxD,YAAY,QAAQ,GAAG,CAAC,UAAU;QAClC,iBAAiB,QAAQ,GAAG,CAAC,eAAe;QAC5C,cAAc,QAAQ,GAAG,CAAC,YAAY;IACxC;IACA,IAAI,CAAC,OAAO,OAAO,EAAE;QACnB,QAAQ,KAAK,CAAC,iCAAiC,OAAO,KAAK,CAAC,OAAO,GAAG,WAAW;QACjF,MAAM,IAAI,MAAM;IAClB;IACA,YAAY,OAAO,IAAI;IACvB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 118, "column": 0}, "map": {"version":3,"sources":["file:///Users/vishnuadithya/Documents/xeno/shopify-mt/apps/backend/src/lib/db.ts"],"sourcesContent":["import { PrismaClient } from '@prisma/client';\nimport { getEnv } from './env';\n\ndeclare global {\n  var prisma: PrismaClient | undefined;\n}\n\nexport function getPrisma(): PrismaClient {\n  // Ensure env parsed (side-effect to validate early)\n  getEnv();\n  if (global.prisma) return global.prisma;\n  const client = new PrismaClient({\n    log: process.env.NODE_ENV === 'development' ? ['query', 'error', 'warn'] : ['error']\n  });\n  global.prisma = client;\n  return client;\n}\n\n\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAMO,SAAS;IACd,oDAAoD;IACpD,IAAA,sLAAM;IACN,IAAI,OAAO,MAAM,EAAE,OAAO,OAAO,MAAM;IACvC,MAAM,SAAS,IAAI,6IAAY,CAAC;QAC9B,KAAK,uCAAyC;YAAC;YAAS;YAAS;SAAO,GAAG;IAC7E;IACA,OAAO,MAAM,GAAG;IAChB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 144, "column": 0}, "map": {"version":3,"sources":["file:///Users/vishnuadithya/Documents/xeno/shopify-mt/apps/backend/src/lib/shopify-admin.ts"],"sourcesContent":["// Small helper to call Admin GraphQL using the accessToken stored in your DB.\nimport { getPrisma } from '@/lib/db'\n\nfunction envTokenForShop(shop: string): string | undefined {\n  const base = shop.toUpperCase().replace(/[^A-Z0-9]/g, '_')\n  const byShop = process.env[`SHOPIFY_TOKEN_${base}`]\n  return byShop || process.env.SHOPIFY_ACCESS_TOKEN\n}\n\nexport async function adminFetch(shop: string, query: string, variables?: any) {\n  let token: string | undefined\n\n  // Try DB first, but tolerate DB outages and fall back to env\n  try {\n    const prisma = getPrisma()\n    const store = await prisma.store.findFirst({ where: { shopDomain: shop } })\n    token = store?.accessToken\n  } catch (_e) {\n    // ignore and try env\n  }\n\n  if (!token) token = envTokenForShop(shop)\n  if (!token) throw new Error(`Missing access token for store ${shop}. Provide in DB or env (SHOPIFY_TOKEN_${shop.toUpperCase().replace(/[^A-Z0-9]/g, '_')} or SHOPIFY_ACCESS_TOKEN).`)\n\n  const res = await fetch(`https://${shop}/admin/api/2024-10/graphql.json`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"X-Shopify-Access-Token\": token,\n    },\n    body: JSON.stringify({ query, variables }),\n    cache: \"no-store\",\n  })\n  const json = await res.json()\n  if (!res.ok || json.errors) {\n    throw new Error(JSON.stringify(json.errors ?? json))\n  }\n  return json.data\n}\n"],"names":[],"mappings":"AAAA,8EAA8E;;;;;AAC9E;;AAEA,SAAS,gBAAgB,IAAY;IACnC,MAAM,OAAO,KAAK,WAAW,GAAG,OAAO,CAAC,cAAc;IACtD,MAAM,SAAS,QAAQ,GAAG,CAAC,CAAC,cAAc,EAAE,MAAM,CAAC;IACnD,OAAO,UAAU,QAAQ,GAAG,CAAC,oBAAoB;AACnD;AAEO,eAAe,WAAW,IAAY,EAAE,KAAa,EAAE,SAAe;IAC3E,IAAI;IAEJ,6DAA6D;IAC7D,IAAI;QACF,MAAM,SAAS,IAAA,wLAAS;QACxB,MAAM,QAAQ,MAAM,OAAO,KAAK,CAAC,SAAS,CAAC;YAAE,OAAO;gBAAE,YAAY;YAAK;QAAE;QACzE,QAAQ,OAAO;IACjB,EAAE,OAAO,IAAI;IACX,qBAAqB;IACvB;IAEA,IAAI,CAAC,OAAO,QAAQ,gBAAgB;IACpC,IAAI,CAAC,OAAO,MAAM,IAAI,MAAM,CAAC,+BAA+B,EAAE,KAAK,sCAAsC,EAAE,KAAK,WAAW,GAAG,OAAO,CAAC,cAAc,KAAK,0BAA0B,CAAC;IAEpL,MAAM,MAAM,MAAM,MAAM,CAAC,QAAQ,EAAE,KAAK,+BAA+B,CAAC,EAAE;QACxE,QAAQ;QACR,SAAS;YACP,gBAAgB;YAChB,0BAA0B;QAC5B;QACA,MAAM,KAAK,SAAS,CAAC;YAAE;YAAO;QAAU;QACxC,OAAO;IACT;IACA,MAAM,OAAO,MAAM,IAAI,IAAI;IAC3B,IAAI,CAAC,IAAI,EAAE,IAAI,KAAK,MAAM,EAAE;QAC1B,MAAM,IAAI,MAAM,KAAK,SAAS,CAAC,KAAK,MAAM,IAAI;IAChD;IACA,OAAO,KAAK,IAAI;AAClB","debugId":null}},
    {"offset": {"line": 194, "column": 0}, "map": {"version":3,"sources":["file:///Users/vishnuadithya/Documents/xeno/shopify-mt/apps/backend/src/app/api/analytics/orders-by-date/route.ts"],"sourcesContent":["// src/app/api/analytics/orders-by-date/route.ts - Real Shopify API Integration\nimport { NextRequest, NextResponse } from \"next/server\";\nimport { adminFetch } from \"@/lib/shopify-admin\";\n\nexport const runtime = \"nodejs\";\n\nfunction toISODate(d: Date) {\n  return d.toISOString().slice(0, 10);\n}\n\nconst ORDERS_BY_DATE_QUERY = `\n  query OrdersByDate($ordersQuery: String!, $first: Int!) {\n    orders(first: $first, query: $ordersQuery, sortKey: CREATED_AT, reverse: false) {\n      edges {\n        node {\n          id\n          createdAt\n          totalPriceSet { shopMoney { amount } }\n          displayFulfillmentStatus\n        }\n      }\n    }\n  }\n`;\n\nexport async function GET(req: NextRequest) {\n  try {\n    const { searchParams } = new URL(req.url);\n    const shop = searchParams.get(\"shop\");\n    if (!shop) return NextResponse.json({ error: \"Missing shop\" }, { status: 400 });\n\n    const end = searchParams.get(\"endDate\") ?? toISODate(new Date());\n    const start = searchParams.get(\"startDate\") ?? \n      toISODate(new Date(Date.now() - 30 * 86400000));\n    const demoDays = Number(searchParams.get(\"demoDays\") ?? 0);\n\n    const ordersQuery = `created_at:>=${start} created_at:<=${end}`;\n\n    // Fetch orders from Shopify Admin GraphQL\n    const data = await adminFetch(shop, ORDERS_BY_DATE_QUERY, {\n      ordersQuery,\n      first: 250\n    });\n\n    const orders = data.orders.edges.map((e: any) => e.node);\n\n    // Bucket orders by day\n    const buckets = new Map<string, { \n      date: string; \n      orders: number; \n      revenue: number;\n      avgOrderValue: number;\n      checkouts: number;\n      carts: number;\n    }>();\n\n    // Process Shopify orders\n    for (const order of orders) {\n      const day = toISODate(new Date(order.createdAt));\n      const revenue = parseFloat(order.totalPriceSet?.shopMoney?.amount || '0');\n      const existing = buckets.get(day) ?? { \n        date: day, orders: 0, revenue: 0, avgOrderValue: 0, checkouts: 0, carts: 0\n      };\n      existing.orders += 1;\n      existing.revenue += revenue;\n      buckets.set(day, existing);\n    }\n\n    // Fill missing days and calculate metrics\n    const out: any[] = [];\n    const startDate = new Date(start);\n    const endDate = new Date(end);\n    \n    for (let d = new Date(startDate); d <= endDate; d = new Date(d.getTime() + 86400000)) {\n      const key = toISODate(d);\n      const data = buckets.get(key) ?? { \n        date: key, orders: 0, revenue: 0, avgOrderValue: 0, checkouts: 0, carts: 0\n      };\n      // Optionally shift dates for demo purposes only\n      if (demoDays > 0) {\n        const shifted = new Date(d.getTime() - demoDays * 86400000);\n        data.date = toISODate(shifted);\n      }\n      \n      // Calculate metrics\n      data.avgOrderValue = data.orders > 0 ? Math.round((data.revenue / data.orders) * 100) / 100 : 0;\n      data.revenue = Math.round(data.revenue * 100) / 100;\n      \n      // Estimate checkouts and carts based on industry standards\n      data.checkouts = Math.round(data.orders * 2.5); // 40% checkout conversion\n      data.carts = Math.round(data.orders * 3.5); // 29% cart conversion\n      \n      out.push(data);\n    }\n\n    const totalRevenue = orders.reduce((sum: number, order: any) => {\n      return sum + parseFloat(order.totalPriceSet?.shopMoney?.amount || '0');\n    }, 0);\n\n    return NextResponse.json({ \n      shop, \n      window: { start, end }, \n      series: out,\n      summary: {\n        totalOrders: orders.length,\n        totalRevenue: Math.round(totalRevenue * 100) / 100,\n        totalCheckouts: Math.round(orders.length * 2.5),\n        totalCarts: Math.round(orders.length * 3.5),\n      }\n    });\n  } catch (err: any) {\n    console.error('Shopify Orders by date error:', err);\n    return NextResponse.json({ error: err.message ?? \"Unknown error\" }, { status: 500 });\n  }\n}"],"names":[],"mappings":"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","debugId":null}}]
}